@model WEB.Models.RequestByPeriodViewModel

@{
    ViewBag.Title = "Отчеты за период";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Выберите нужные параметры и нажмите "Сформировать"</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate)
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сформировать" class="btn btn-outline-primary" /> @Html.ActionLink("Назад", "Index", null, new { @class = "btn btn-outline-secondary" })
            </div>
        </div>
    </div>
}

<div class="card mb-3">
    <div class="card-header">
        <i class="fas fa-table"></i>
        Результат
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.SearchResult.First().Connection.Name)</th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().Connection.ConnectionType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().Connection.InteractionType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().ReceivedDataSizeStr)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().TransmittedDataSizeStr)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().TransmittedRows)
                        </th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.SearchResult.First().Connection.Name)</th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().Connection.ConnectionType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().Connection.InteractionType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().ReceivedDataSizeStr)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().TransmittedDataSizeStr)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SearchResult.First().TransmittedRows)
                        </th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model.SearchResult)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Connection.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Connection.ConnectionType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Connection.InteractionType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReceivedDataSizeStr)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TransmittedDataSizeStr)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TransmittedRows)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- Page level plugin JavaScript-->
    <script src="~/dark_theme/vendor/datatables/jquery.dataTables.js"></script>
    <script src="~/dark_theme/vendor/datatables/dataTables.bootstrap4.js"></script>

    <!-- Demo scripts for this page-->

    <script src="~/dark_theme/js/demo/datatables-demo.js"></script>


    <script src="~/html_to_xls/js/xlsx.core.min.js"></script>
    <script src="~/html_to_xls/js/FileSaver.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/TableExport/5.0.3/js/tableexport.min.js"></script>
    <script>
        $(function () {
            $("table").tableExport();
        });
    </script>
}

@section breadcrumb{
    <li class="breadcrumb-item">@Html.ActionLink("Отчеты-статистика", "Index")</li>
    <li class="breadcrumb-item active">@ViewBag.Title</li>
}